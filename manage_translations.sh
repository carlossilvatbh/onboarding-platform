#!/bin/bash

# Script para gerenciar tradu√ß√µes do projeto ONBOARDING

echo "üåç Gerenciando tradu√ß√µes do projeto ONBOARDING..."

# Navegar para o diret√≥rio backend
cd backend

# Verificar se o ambiente virtual est√° ativo
if [[ "$VIRTUAL_ENV" == "" ]]; then
    echo "‚ö†Ô∏è Ambiente virtual n√£o detectado. Ativando..."
    source ../venv/bin/activate
fi

# Fun√ß√£o para mostrar ajuda
show_help() {
    echo "Uso: $0 [comando]"
    echo ""
    echo "Comandos dispon√≠veis:"
    echo "  extract    - Extrair strings para tradu√ß√£o"
    echo "  compile    - Compilar tradu√ß√µes"
    echo "  update     - Atualizar arquivos de tradu√ß√£o existentes"
    echo "  check      - Verificar tradu√ß√µes"
    echo "  stats      - Mostrar estat√≠sticas de tradu√ß√£o"
    echo "  help       - Mostrar esta ajuda"
    echo ""
}

# Fun√ß√£o para extrair strings
extract_strings() {
    echo "üìù Extraindo strings para tradu√ß√£o..."
    
    # Criar diret√≥rios se n√£o existirem
    mkdir -p locale/en/LC_MESSAGES
    mkdir -p locale/pt_BR/LC_MESSAGES
    
    # Extrair strings do Django
    python manage.py makemessages -l en -l pt_BR --ignore=venv --ignore=node_modules
    
    echo "‚úÖ Strings extra√≠das com sucesso!"
}

# Fun√ß√£o para compilar tradu√ß√µes
compile_translations() {
    echo "üî® Compilando tradu√ß√µes..."
    
    python manage.py compilemessages
    
    echo "‚úÖ Tradu√ß√µes compiladas com sucesso!"
}

# Fun√ß√£o para atualizar tradu√ß√µes
update_translations() {
    echo "üîÑ Atualizando tradu√ß√µes existentes..."
    
    python manage.py makemessages -l en -l pt_BR --ignore=venv --ignore=node_modules --no-obsolete
    
    echo "‚úÖ Tradu√ß√µes atualizadas com sucesso!"
}

# Fun√ß√£o para verificar tradu√ß√µes
check_translations() {
    echo "üîç Verificando tradu√ß√µes..."
    
    # Verificar arquivos .po
    for lang in en pt_BR; do
        po_file="locale/$lang/LC_MESSAGES/django.po"
        if [ -f "$po_file" ]; then
            echo "üìÑ Verificando $lang..."
            
            # Contar strings traduzidas e n√£o traduzidas
            total=$(grep -c "^msgid" "$po_file")
            translated=$(grep -c "^msgstr \"[^\"]\+\"" "$po_file")
            untranslated=$((total - translated))
            
            if [ $total -gt 0 ]; then
                percentage=$((translated * 100 / total))
                echo "   Total: $total strings"
                echo "   Traduzidas: $translated ($percentage%)"
                echo "   N√£o traduzidas: $untranslated"
            fi
            
            # Verificar sintaxe
            if msgfmt --check "$po_file" 2>/dev/null; then
                echo "   ‚úÖ Sintaxe OK"
            else
                echo "   ‚ùå Erro de sintaxe"
            fi
        else
            echo "‚ùå Arquivo $po_file n√£o encontrado"
        fi
        echo ""
    done
}

# Fun√ß√£o para mostrar estat√≠sticas
show_stats() {
    echo "üìä Estat√≠sticas de tradu√ß√£o:"
    echo ""
    
    for lang in en pt_BR; do
        po_file="locale/$lang/LC_MESSAGES/django.po"
        if [ -f "$po_file" ]; then
            echo "üåç $lang:"
            
            # Estat√≠sticas detalhadas
            total=$(grep -c "^msgid" "$po_file")
            translated=$(grep -c "^msgstr \"[^\"]\+\"" "$po_file")
            empty=$(grep -c "^msgstr \"\"$" "$po_file")
            fuzzy=$(grep -c "#, fuzzy" "$po_file")
            
            if [ $total -gt 0 ]; then
                percentage=$((translated * 100 / total))
                echo "   üìù Total de strings: $total"
                echo "   ‚úÖ Traduzidas: $translated ($percentage%)"
                echo "   ‚ùå Vazias: $empty"
                echo "   ‚ö†Ô∏è Fuzzy: $fuzzy"
                
                # Barra de progresso simples
                filled=$((percentage / 5))
                empty_bars=$((20 - filled))
                printf "   ["
                for ((i=1; i<=filled; i++)); do printf "‚ñà"; done
                for ((i=1; i<=empty_bars; i++)); do printf "‚ñë"; done
                printf "] %d%%\n" $percentage
            fi
        fi
        echo ""
    done
}

# Processar argumentos
case "${1:-help}" in
    extract)
        extract_strings
        ;;
    compile)
        compile_translations
        ;;
    update)
        update_translations
        ;;
    check)
        check_translations
        ;;
    stats)
        show_stats
        ;;
    help|--help|-h)
        show_help
        ;;
    *)
        echo "‚ùå Comando desconhecido: $1"
        echo ""
        show_help
        exit 1
        ;;
esac

# Voltar ao diret√≥rio raiz
cd ..

