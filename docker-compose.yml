version: '3.8'

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: onboarding_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - static_volume:/app/backend/staticfiles
      - media_volume:/app/backend/media
    environment:
      - DJANGO_ENVIRONMENT=development
      - DB_HOST=db
      - DB_NAME=onboarding_dev
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - CACHE_URL=redis://redis:6379/1
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "cd backend &&
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"

  celery:
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - .:/app
    environment:
      - DJANGO_ENVIRONMENT=development
      - DB_HOST=db
      - DB_NAME=onboarding_dev
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - CACHE_URL=redis://redis:6379/1
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "cd backend &&
             celery -A config worker --loglevel=info"

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - .:/app
    environment:
      - DJANGO_ENVIRONMENT=development
      - DB_HOST=db
      - DB_NAME=onboarding_dev
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - CACHE_URL=redis://redis:6379/1
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "cd backend &&
             celery -A config beat --loglevel=info"

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:

